{
  "version": 3,
  "sources": ["../../../../../../node_modules/zrender/lib/canvas/Layer.js", "../../../../../../node_modules/zrender/lib/canvas/Painter.js", "../../../../../../node_modules/echarts/lib/renderer/installCanvasRenderer.js"],
  "sourcesContent": ["import { __extends } from \"tslib\";\nimport * as util from '../core/util.js';\nimport { devicePixelRatio } from '../config.js';\nimport Eventful from '../core/Eventful.js';\nimport { getCanvasGradient } from './helper.js';\nimport { createCanvasPattern } from './graphic.js';\nimport BoundingRect from '../core/BoundingRect.js';\nimport { REDRAW_BIT } from '../graphic/constants.js';\nimport { platformApi } from '../core/platform.js';\nfunction createDom(id, painter, dpr) {\n  var newDom = platformApi.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n  if (newDomStyle) {\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = '0';\n    newDomStyle.top = '0';\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n;\nvar Layer = function (_super) {\n  __extends(Layer, _super);\n  function Layer(id, painter, dpr) {\n    var _this = _super.call(this) || this;\n    _this.motionBlur = false;\n    _this.lastFrameAlpha = 0.7;\n    _this.dpr = 1;\n    _this.virtual = false;\n    _this.config = {};\n    _this.incremental = false;\n    _this.zlevel = 0;\n    _this.maxRepaintRectCount = 5;\n    _this.__dirty = true;\n    _this.__firstTimePaint = true;\n    _this.__used = false;\n    _this.__drawIndex = 0;\n    _this.__startIndex = 0;\n    _this.__endIndex = 0;\n    _this.__prevStartIndex = null;\n    _this.__prevEndIndex = null;\n    var dom;\n    dpr = dpr || devicePixelRatio;\n    if (typeof id === 'string') {\n      dom = createDom(id, painter, dpr);\n    } else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n    _this.id = id;\n    _this.dom = dom;\n    var domStyle = dom.style;\n    if (domStyle) {\n      util.disableUserSelect(dom);\n      dom.onselectstart = function () {\n        return false;\n      };\n      domStyle.padding = '0';\n      domStyle.margin = '0';\n      domStyle.borderWidth = '0';\n    }\n    _this.painter = painter;\n    _this.dpr = dpr;\n    return _this;\n  }\n  Layer.prototype.getElementCount = function () {\n    return this.__endIndex - this.__startIndex;\n  };\n  Layer.prototype.afterBrush = function () {\n    this.__prevStartIndex = this.__startIndex;\n    this.__prevEndIndex = this.__endIndex;\n  };\n  Layer.prototype.initContext = function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  };\n  Layer.prototype.setUnpainted = function () {\n    this.__firstTimePaint = true;\n  };\n  Layer.prototype.createBackBuffer = function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    if (dpr !== 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  };\n  Layer.prototype.createRepaintRects = function (displayList, prevList, viewWidth, viewHeight) {\n    if (this.__firstTimePaint) {\n      this.__firstTimePaint = false;\n      return null;\n    }\n    var mergedRepaintRects = [];\n    var maxRepaintRectCount = this.maxRepaintRectCount;\n    var full = false;\n    var pendingRect = new BoundingRect(0, 0, 0, 0);\n    function addRectToMergePool(rect) {\n      if (!rect.isFinite() || rect.isZero()) {\n        return;\n      }\n      if (mergedRepaintRects.length === 0) {\n        var boundingRect = new BoundingRect(0, 0, 0, 0);\n        boundingRect.copy(rect);\n        mergedRepaintRects.push(boundingRect);\n      } else {\n        var isMerged = false;\n        var minDeltaArea = Infinity;\n        var bestRectToMergeIdx = 0;\n        for (var i = 0; i < mergedRepaintRects.length; ++i) {\n          var mergedRect = mergedRepaintRects[i];\n          if (mergedRect.intersect(rect)) {\n            var pendingRect_1 = new BoundingRect(0, 0, 0, 0);\n            pendingRect_1.copy(mergedRect);\n            pendingRect_1.union(rect);\n            mergedRepaintRects[i] = pendingRect_1;\n            isMerged = true;\n            break;\n          } else if (full) {\n            pendingRect.copy(rect);\n            pendingRect.union(mergedRect);\n            var aArea = rect.width * rect.height;\n            var bArea = mergedRect.width * mergedRect.height;\n            var pendingArea = pendingRect.width * pendingRect.height;\n            var deltaArea = pendingArea - aArea - bArea;\n            if (deltaArea < minDeltaArea) {\n              minDeltaArea = deltaArea;\n              bestRectToMergeIdx = i;\n            }\n          }\n        }\n        if (full) {\n          mergedRepaintRects[bestRectToMergeIdx].union(rect);\n          isMerged = true;\n        }\n        if (!isMerged) {\n          var boundingRect = new BoundingRect(0, 0, 0, 0);\n          boundingRect.copy(rect);\n          mergedRepaintRects.push(boundingRect);\n        }\n        if (!full) {\n          full = mergedRepaintRects.length >= maxRepaintRectCount;\n        }\n      }\n    }\n    for (var i = this.__startIndex; i < this.__endIndex; ++i) {\n      var el = displayList[i];\n      if (el) {\n        var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\n        var prevRect = el.__isRendered && (el.__dirty & REDRAW_BIT || !shouldPaint) ? el.getPrevPaintRect() : null;\n        if (prevRect) {\n          addRectToMergePool(prevRect);\n        }\n        var curRect = shouldPaint && (el.__dirty & REDRAW_BIT || !el.__isRendered) ? el.getPaintRect() : null;\n        if (curRect) {\n          addRectToMergePool(curRect);\n        }\n      }\n    }\n    for (var i = this.__prevStartIndex; i < this.__prevEndIndex; ++i) {\n      var el = prevList[i];\n      var shouldPaint = el && el.shouldBePainted(viewWidth, viewHeight, true, true);\n      if (el && (!shouldPaint || !el.__zr) && el.__isRendered) {\n        var prevRect = el.getPrevPaintRect();\n        if (prevRect) {\n          addRectToMergePool(prevRect);\n        }\n      }\n    }\n    var hasIntersections;\n    do {\n      hasIntersections = false;\n      for (var i = 0; i < mergedRepaintRects.length;) {\n        if (mergedRepaintRects[i].isZero()) {\n          mergedRepaintRects.splice(i, 1);\n          continue;\n        }\n        for (var j = i + 1; j < mergedRepaintRects.length;) {\n          if (mergedRepaintRects[i].intersect(mergedRepaintRects[j])) {\n            hasIntersections = true;\n            mergedRepaintRects[i].union(mergedRepaintRects[j]);\n            mergedRepaintRects.splice(j, 1);\n          } else {\n            j++;\n          }\n        }\n        i++;\n      }\n    } while (hasIntersections);\n    this._paintRects = mergedRepaintRects;\n    return mergedRepaintRects;\n  };\n  Layer.prototype.debugGetPaintRects = function () {\n    return (this._paintRects || []).slice();\n  };\n  Layer.prototype.resize = function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n      if (dpr !== 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  };\n  Layer.prototype.clear = function (clearAll, clearColor, repaintRects) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n    var self = this;\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n    var domBack = this.domBack;\n    function doClear(x, y, width, height) {\n      ctx.clearRect(x, y, width, height);\n      if (clearColor && clearColor !== 'transparent') {\n        var clearColorGradientOrPattern = void 0;\n        if (util.isGradientObject(clearColor)) {\n          var shouldCache = clearColor.global || clearColor.__width === width && clearColor.__height === height;\n          clearColorGradientOrPattern = shouldCache && clearColor.__canvasGradient || getCanvasGradient(ctx, clearColor, {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          });\n          clearColor.__canvasGradient = clearColorGradientOrPattern;\n          clearColor.__width = width;\n          clearColor.__height = height;\n        } else if (util.isImagePatternObject(clearColor)) {\n          clearColor.scaleX = clearColor.scaleX || dpr;\n          clearColor.scaleY = clearColor.scaleY || dpr;\n          clearColorGradientOrPattern = createCanvasPattern(ctx, clearColor, {\n            dirty: function () {\n              self.setUnpainted();\n              self.painter.refresh();\n            }\n          });\n        }\n        ctx.save();\n        ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n        ctx.fillRect(x, y, width, height);\n        ctx.restore();\n      }\n      if (haveMotionBLur) {\n        ctx.save();\n        ctx.globalAlpha = lastFrameAlpha;\n        ctx.drawImage(domBack, x, y, width, height);\n        ctx.restore();\n      }\n    }\n    ;\n    if (!repaintRects || haveMotionBLur) {\n      doClear(0, 0, width, height);\n    } else if (repaintRects.length) {\n      util.each(repaintRects, function (rect) {\n        doClear(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n      });\n    }\n  };\n  return Layer;\n}(Eventful);\nexport default Layer;", "import { devicePixelRatio } from '../config.js';\nimport * as util from '../core/util.js';\nimport Layer from './Layer.js';\nimport requestAnimationFrame from '../animation/requestAnimationFrame.js';\nimport env from '../core/env.js';\nimport { brush, brushSingle } from './graphic.js';\nimport { REDRAW_BIT } from '../graphic/constants.js';\nimport { getSize } from './helper.js';\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n  if (layer.__builtin__) {\n    return true;\n  }\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n  return true;\n}\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div');\n  domRoot.style.cssText = ['position:relative', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\nvar CanvasPainter = function () {\n  function CanvasPainter(root, storage, opts, id) {\n    this.type = 'canvas';\n    this._zlevelList = [];\n    this._prevDisplayList = [];\n    this._layers = {};\n    this._layerConfig = {};\n    this._needsManuallyCompositing = false;\n    this.type = 'canvas';\n    var singleCanvas = !root.nodeName || root.nodeName.toUpperCase() === 'CANVAS';\n    this._opts = opts = util.extend({}, opts || {});\n    this.dpr = opts.devicePixelRatio || devicePixelRatio;\n    this._singleCanvas = singleCanvas;\n    this.root = root;\n    var rootStyle = root.style;\n    if (rootStyle) {\n      util.disableUserSelect(root);\n      root.innerHTML = '';\n    }\n    this.storage = storage;\n    var zlevelList = this._zlevelList;\n    this._prevDisplayList = [];\n    var layers = this._layers;\n    if (!singleCanvas) {\n      this._width = getSize(root, 0, opts);\n      this._height = getSize(root, 1, opts);\n      var domRoot = this._domRoot = createRoot(this._width, this._height);\n      root.appendChild(domRoot);\n    } else {\n      var rootCanvas = root;\n      var width = rootCanvas.width;\n      var height = rootCanvas.height;\n      if (opts.width != null) {\n        width = opts.width;\n      }\n      if (opts.height != null) {\n        height = opts.height;\n      }\n      this.dpr = opts.devicePixelRatio || 1;\n      rootCanvas.width = width * this.dpr;\n      rootCanvas.height = height * this.dpr;\n      this._width = width;\n      this._height = height;\n      var mainLayer = new Layer(rootCanvas, this, this.dpr);\n      mainLayer.__builtin__ = true;\n      mainLayer.initContext();\n      layers[CANVAS_ZLEVEL] = mainLayer;\n      mainLayer.zlevel = CANVAS_ZLEVEL;\n      zlevelList.push(CANVAS_ZLEVEL);\n      this._domRoot = root;\n    }\n  }\n  CanvasPainter.prototype.getType = function () {\n    return 'canvas';\n  };\n  CanvasPainter.prototype.isSingleCanvas = function () {\n    return this._singleCanvas;\n  };\n  CanvasPainter.prototype.getViewportRoot = function () {\n    return this._domRoot;\n  };\n  CanvasPainter.prototype.getViewportRootOffset = function () {\n    var viewportRoot = this.getViewportRoot();\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  };\n  CanvasPainter.prototype.refresh = function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var prevList = this._prevDisplayList;\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n    this._paintList(list, prevList, paintAll, this._redrawId);\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n    if (this._opts.useDirtyRect) {\n      this._prevDisplayList = list.slice();\n    }\n    return this;\n  };\n  CanvasPainter.prototype.refreshHover = function () {\n    this._paintHoverList(this.storage.getDisplayList(false));\n  };\n  CanvasPainter.prototype._paintHoverList = function (list) {\n    var len = list.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n    if (!len) {\n      return;\n    }\n    var scope = {\n      inHover: true,\n      viewWidth: this._width,\n      viewHeight: this._height\n    };\n    var ctx;\n    for (var i = 0; i < len; i++) {\n      var el = list[i];\n      if (el.__inHover) {\n        if (!hoverLayer) {\n          hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n        }\n        if (!ctx) {\n          ctx = hoverLayer.ctx;\n          ctx.save();\n        }\n        brush(ctx, el, scope, i === len - 1);\n      }\n    }\n    if (ctx) {\n      ctx.restore();\n    }\n  };\n  CanvasPainter.prototype.getHoverLayer = function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  };\n  CanvasPainter.prototype.paintOne = function (ctx, el) {\n    brushSingle(ctx, el);\n  };\n  CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n    paintAll = paintAll || false;\n    this._updateLayerStatus(list);\n    var _a = this._doPaintList(list, prevList, paintAll),\n      finished = _a.finished,\n      needsRefreshHover = _a.needsRefreshHover;\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n    if (needsRefreshHover) {\n      this._paintHoverList(list);\n    }\n    if (!finished) {\n      var self_1 = this;\n      requestAnimationFrame(function () {\n        self_1._paintList(list, prevList, paintAll, redrawId);\n      });\n    } else {\n      this.eachLayer(function (layer) {\n        layer.afterBrush && layer.afterBrush();\n      });\n    }\n  };\n  CanvasPainter.prototype._compositeManually = function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height);\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  };\n  CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\n    var _this = this;\n    var layerList = [];\n    var useDirtyRect = this._opts.useDirtyRect;\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n    var finished = true;\n    var needsRefreshHover = false;\n    var _loop_1 = function (k) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var repaintRects = useDirtyRect && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this_1._zlevelList[0] ? this_1._backgroundColor : null;\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor, repaintRects);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor, repaintRects);\n        }\n      }\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n      var i;\n      var repaint = function (repaintRect) {\n        var scope = {\n          inHover: false,\n          allClipped: false,\n          prevEl: null,\n          viewWidth: _this._width,\n          viewHeight: _this._height\n        };\n        for (i = start; i < layer.__endIndex; i++) {\n          var el = list[i];\n          if (el.__inHover) {\n            needsRefreshHover = true;\n          }\n          _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\n          if (useTimer) {\n            var dTime = Date.now() - startTime;\n            if (dTime > 15) {\n              break;\n            }\n          }\n        }\n        if (scope.prevElClipPaths) {\n          ctx.restore();\n        }\n      };\n      if (repaintRects) {\n        if (repaintRects.length === 0) {\n          i = layer.__endIndex;\n        } else {\n          var dpr = this_1.dpr;\n          for (var r = 0; r < repaintRects.length; ++r) {\n            var rect = repaintRects[r];\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n            ctx.clip();\n            repaint(rect);\n            ctx.restore();\n          }\n        }\n      } else {\n        ctx.save();\n        repaint();\n        ctx.restore();\n      }\n      layer.__drawIndex = i;\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n    };\n    var this_1 = this;\n    for (var k = 0; k < layerList.length; k++) {\n      _loop_1(k);\n    }\n    if (env.wxa) {\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n    return {\n      finished: finished,\n      needsRefreshHover: needsRefreshHover\n    };\n  };\n  CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\n    var ctx = currentLayer.ctx;\n    if (useDirtyRect) {\n      var paintRect = el.getPaintRect();\n      if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\n        brush(ctx, el, scope, isLast);\n        el.setPrevPaintRect(paintRect);\n      }\n    } else {\n      brush(ctx, el, scope, isLast);\n    }\n  };\n  CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n    var layer = this._layers[zlevel];\n    if (!layer) {\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      } else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\n        util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\n      }\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n      this.insertLayer(zlevel, layer);\n      layer.initContext();\n    }\n    return layer;\n  };\n  CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var domRoot = this._domRoot;\n    var prevLayer = null;\n    var i = -1;\n    if (layersMap[zlevel]) {\n      if (process.env.NODE_ENV !== 'production') {\n        util.logError('ZLevel ' + zlevel + ' has been used already');\n      }\n      return;\n    }\n    if (!isLayerValid(layer)) {\n      if (process.env.NODE_ENV !== 'production') {\n        util.logError('Layer of zlevel ' + zlevel + ' is not valid');\n      }\n      return;\n    }\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n      prevLayer = layersMap[zlevelList[i]];\n    }\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer;\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n    layer.painter || (layer.painter = this);\n  };\n  CanvasPainter.prototype.eachLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  };\n  CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  };\n  CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  };\n  CanvasPainter.prototype.getLayers = function () {\n    return this._layers;\n  };\n  CanvasPainter.prototype._updateLayerStatus = function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n        prevLayer.__endIndex = idx;\n      }\n    }\n    if (this._singleCanvas) {\n      for (var i_1 = 1; i_1 < list.length; i_1++) {\n        var el = list[i_1];\n        if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n    var prevZlevel;\n    var i;\n    for (i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer = void 0;\n      if (prevZlevel !== zlevel) {\n        prevZlevel = zlevel;\n        incrementalLayerCount = 0;\n      }\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n      if (!layer.__builtin__) {\n        util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n      if (layer !== prevLayer) {\n        layer.__used = true;\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n        layer.__startIndex = i;\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          layer.__drawIndex = -1;\n        }\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n      if (el.__dirty & REDRAW_BIT && !el.__inHover) {\n        layer.__dirty = true;\n        if (layer.incremental && layer.__drawIndex < 0) {\n          layer.__drawIndex = i;\n        }\n      }\n    }\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      }\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  };\n  CanvasPainter.prototype.clear = function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  };\n  CanvasPainter.prototype._clearLayer = function (layer) {\n    layer.clear();\n  };\n  CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n    util.each(this._layers, function (layer) {\n      layer.setUnpainted();\n    });\n  };\n  CanvasPainter.prototype.configLayer = function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  };\n  CanvasPainter.prototype.delLayer = function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n    if (!layer) {\n      return;\n    }\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  };\n  CanvasPainter.prototype.resize = function (width, height) {\n    if (!this._domRoot.style) {\n      if (width == null || height == null) {\n        return;\n      }\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot;\n      domRoot.style.display = 'none';\n      var opts = this._opts;\n      var root = this.root;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = getSize(root, 0, opts);\n      height = getSize(root, 1, opts);\n      domRoot.style.display = '';\n      if (this._width !== width || height !== this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n        this.refresh(true);\n      }\n      this._width = width;\n      this._height = height;\n    }\n    return this;\n  };\n  CanvasPainter.prototype.clearLayer = function (zlevel) {\n    var layer = this._layers[zlevel];\n    if (layer) {\n      layer.clear();\n    }\n  };\n  CanvasPainter.prototype.dispose = function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  };\n  CanvasPainter.prototype.getRenderedCanvas = function (opts) {\n    opts = opts || {};\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n    var ctx = imageLayer.ctx;\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width_1 = imageLayer.dom.width;\n      var height_1 = imageLayer.dom.height;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width_1, height_1);\n        } else if (layer.renderToCanvas) {\n          ctx.save();\n          layer.renderToCanvas(ctx);\n          ctx.restore();\n        }\n      });\n    } else {\n      var scope = {\n        inHover: false,\n        viewWidth: this._width,\n        viewHeight: this._height\n      };\n      var displayList = this.storage.getDisplayList(true);\n      for (var i = 0, len = displayList.length; i < len; i++) {\n        var el = displayList[i];\n        brush(ctx, el, scope, i === len - 1);\n      }\n    }\n    return imageLayer.dom;\n  };\n  CanvasPainter.prototype.getWidth = function () {\n    return this._width;\n  };\n  CanvasPainter.prototype.getHeight = function () {\n    return this._height;\n  };\n  return CanvasPainter;\n}();\nexport default CanvasPainter;\n;", "/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport CanvasPainter from 'zrender/lib/canvas/Painter.js';\nexport function install(registers) {\n  registers.registerPainter('canvas', CanvasPainter);\n}"],
  "mappings": "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",
  "names": ["Layer", "i", "width", "height", "CanvasPainter", "k", "layer"]
}
